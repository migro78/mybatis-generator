package ${package.Controller};

import java.util.Map;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
#if(${providerClassPackage})
import ${providerClassPackage};
#end

/**
 * <p>
 * ${table.comment}  前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("/${table.entityPath}/")
@Api(value = "${table.comment}接口", description = "${table.comment}接口")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass}<${entity}, ${table.serviceName}> {
#else
public class ${table.controllerName} {
#end

	@PutMapping(value = "read/page")
	@ApiOperation(value = "查询${table.comment}")
	public Object query(ModelMap modelMap, @RequestBody Map<String, Object> param) {
		return super.pagingQuery(modelMap, param);
	}


	@PutMapping(value = "read/detail")
	@ApiOperation(value = "${table.comment}详情")
	public Object get(ModelMap modelMap, @RequestBody ${entity} param) {
		return super.get(modelMap,param);
	}

	@PostMapping
	@ApiOperation(value = "修改${table.comment}")
	public Object update(HttpServletRequest request,ModelMap modelMap, @RequestBody ${entity} param) {
		return super.update(request,modelMap,param);
	}

	@DeleteMapping
	@ApiOperation(value = "删除${table.comment}")
	public Object delete(ModelMap modelMap, @RequestBody ${entity} param) {
		return super.delete(modelMap,param);
	}
}